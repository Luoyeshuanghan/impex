{"name":"Impex","tagline":"a powerful web application engine","body":"# Impex —— A powerful web application engine\r\n\r\nimpex是一个用于开发web应用的组件式开发引擎，impex可以运行在桌面或移动端让你的web程序更好维护，更好开发。\r\nimpex的目标是让开发者基于web技术以最低的学习成本构建应用，所以impex会尽量简单。\r\n\t\r\n## 一切皆组件\r\n* **为什么**\r\n基本上所有的web开发都大量使用了各种不同的组件，包括浏览器内置的(video/audio/colorpicker...)或者第三方开发的(日历/Dialog...)，组件具有独立的作用域和控制方法，甚至拥有独立的样式，可以在适合的场景重复使用，\r\n让开发变的更简单，更高效。\r\n那么，还需要什么？\r\n当你使用了类似bootstrap之类的库时，一个modal组件就会导致你的页面上产生几十行的HTML代码，\r\n而仅仅是描述了一个弹窗，如果是10个就会产生大量的HTML描述标签，当你维护源码时一定会头痛。\r\n\r\n* **impex组件**\r\nimpex提供让开发者定义web组件的能力，就像video标签样，看上去只有一行代码，而在运行时impex自动解析标签实现组件功能。组件可以嵌套组件，从而组合出强大的功能。如果你无法从web网站的开发中理解组件的价值，那么可以换个思路，如果使用HTML来开发移动应用，所有UI就是组件，面板、列表、表单等等\r\n\r\n## impex有多简单？\r\n* **组件**\r\n    * 表现为自定义标签，减少代码量\r\n\t* 可重用的自包含逻辑实体，一处定义，多处使用\r\n    * 表达式使用数据绑定技术，模型改变，视图自动刷新\r\n    * 表达式使用js原生语法，让你不用担心学习成本{{ show('x'+x,y||3) }}\r\n* **指令**\r\n    * 表现为自定义属性，增强组件功能\r\n    * 继承自组件，主要操作视图来实现功能，比如x-each/x-show\r\n* **转换器**\r\n    * 使用在表达式中，对输出结果进行转换，比如金额、大小写等\r\n    * 如果不喜欢，也可以不用转换器，别忘了，impex支持调用域外函数\r\n* **服务**\r\n    * 如果需要自定义复杂的组件/指令/转换器，可以注入服务来辅助你。impex内置了一些不错的工具\r\n\r\n## Demo\r\n\r\n一个“复杂”的demo\r\n\r\n```html\r\n<div id=\"entry\">\r\n    {{#cap 'hello ' + title }}\r\n    <x-subtitle>\r\n        {{version}}\r\n    </x-subtitle>\r\n</div>\r\n<script>\r\n\t//转换器\r\n    impex.converter('cap',{\r\n        to:function(){\r\n            var cap = this.$value[0].toUpperCase();\r\n            return cap + this.$value.substr(1);\r\n        }\r\n    });\r\n    //组件\r\n    impex.component('x-subtitle',{\r\n        $template:\"<sub>{{=CONTENT}}</sub>\"\r\n    });\r\n\r\n    //渲染\r\n    impex.render(document.getElementById('entry'),new function(){\r\n        this.title = 'impex';\r\n        this.version = impex.version.toString();\r\n    });\r\n\r\n</script>\r\n```\r\n\r\n## API Doc\r\n[website here](http://mrsoya.github.io/impex/doc)\r\n\r\n## 如何构建\r\n\r\nimpex为了通用，内置了一些指令，如果你不需要或者还需要内置其他东西，可以重新构建impex。\r\nImpex使用 [gulp](http://gulpjs.com) 来构建源码，而在这之前你需要安装了nodejs，然后只需要在Impex工程目录执行如下命令\r\n\r\n\t\r\n1.安装依赖模块\r\n\t\r\n\tnpm install\r\n\t\r\n2.执行gulp\r\n\r\n    gulp\r\n\r\n看吧，这有多简单\r\n\r\n### 兼容性\r\n* IE8(with impex.ext.ie8)\r\n* IE9+\r\n* FF38+\r\n* chrome43+\r\n* safari8+\r\n* opera31+\r\n* android4.0+\r\n* IOS7.1+\r\n\r\n### 应用场景\r\nimpex可以使用在任何web环境来提高开发效率，比如在线网站或者本地web应用等。\r\n\r\n用于HTML5交互动画开发的IDE [Soya Studio](http://soya2d.com/ide/) 就是基于impex开发的本地web应用。\r\n\r\n### Github Issues\r\n\r\n如果有bug或者新的特性需求，请提交在issues中\r\n\r\n### FAQ\r\n\r\n如果你遇见了问题或者发现了bug，请先查阅issues和wiki中，是否已经有了解决方案。如果你发现了满意的答案，那会为你节省很多时间。\r\n\r\n## License\r\n\r\nImpex基于 [MIT](http://opensource.org/licenses/MIT) 协议发布。请查阅LICENSE文件\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}